-----------------яннаыхрэ н мюпсьемхх-----------------------------------------
create or replace function create_violation
(_date date, _type varchar, id_stud int, fact varchar)
returns void as $$
declare _id int;
begin 
	insert into violation ("date", "type")
	values (_date, _type);
	_id = (select max(id) from violation);
	insert into violators (student_id, violation_id, fact)
	values (id_stud, _id, fact);
end $$
	language 'plpgsql';

_________________гюбедсчыхи наыефхрхел_______________________
-----------------оняекхрэ ярсдемрю---------------------------
create or replace function settle_student
(
	_name char(30),
	_lastname char(30),
	_father_name char(30),
	_course int,
	_specialty char(100),
	_invoice text, 
	_sanitary_pass text,
	_category_id int,
	_room_id int
)
returns void as $$
declare _id int;
begin
	insert into students (name, lastname, father_name, 
						  course, specialty, invoice, 
						  sanitary_pass, category_id)
			values (_name, _lastname, _father_name, 
						  _course, _specialty, _invoice, 
						  _sanitary_pass, _category_id);
	_id = (select max(id) from students);
	insert into room_student (settlement_date, room_id, student_id)
	values (current_date, _room_id, _id);
end $$
	language 'plpgsql';

-----------------бшяекхрэ ярсдемрю----------------------------
update room_student
set eviction_date = current_date
where id = 2

-----------------мюгмювхрэ нрпюанрйс--------------------------
update violations
set penalty = 'text'
where id = 2;

_________________бюуреп_______________________________________
-----------------опносярхрэ ярсдемрю--------------------------
select * from students where
name = 'name' and
lastname = 'lastname'

-----------------опносярхрэ цняръ ярсдемрю--------------------
insert into guests(name, lastname, father_name, 
				   registration_adress, visit_date, 
				   arrival_time, room_id)
values ('name', 'lastname', 'father_name', 
		'adress', current_date, localtime, 2);

_________________гюбунг_______________________________________
-----------------бшдюрэ аекэе---------------------------------
insert into linens (grant_date, student_id) 
values (current_date, 1);

-----------------опхмърэ аекэе--------------------------------
update linens
set revoke_date = current_date
where student_id = 1;

_________________ярсдемр______________________________________
-----------------опнялнрперэ ярсдемрнб------------------------
select s.name, s.lastname, s.course, s.specialty, rs.id as room_num
from students as s, room_student as rs
where s.id = rs.student_id;

-----------------ондюрэ гюъбйс мю пелнмр----------------------
create function create_repair_request
(_student_id int, _type char(100), _theme char(100))
returns void as $$
declare _room_id int;
begin 
	_room_id = (select id from room_student where student_id = _student_id);
	insert into repair_request("type", "theme", "request_date", "room_student_id")
	values (_type, _theme, current_date, _room_id);
end $$
	language 'plpgsql';

-----------------ондрбепдхрэ пелнмр---------------------------
update repair_request
set repair_date = current_date
where id = 2;
_________________реуоепянмюк__________________________________
-----------------онялнрперэ яохянй гюъбнй мю пелнмр-----------
select * from repair_request;

_________________рпхццеп дкъ опнбепйх оняерхрекеи_____________
create or replace function check_visit_time() returns trigger as $$
	begin 
		if new.arrival_time > '20:00:00' then
			raise exception 'No visitors after eight!';
		end if;
		return new;
	end;
$$ language 'plpgsql';

create trigger check_visit_time before insert or update on guests
	for each row execute procedure check_visit_time();

_______опедярюбкемхе х гюопня дкъ нрякефхбюмхъ осяршу йнлмюр___
create or replace view taken_places as
select r.id, count(rs.room_id) as places_taken
from rooms as r left join room_student as rs on r.id = rs.room_id
where rs.eviction_date is null and rs.settlement_date is not null
group by r.id
order by r.id;

select r.id from rooms as r left join taken_places as tp on r.id = tp.id
where tp.places_taken < r.places or places_taken is null;

_______опедярюбкемхе дкъ опнялнрпю аекэъ________________________
create or replace view linens_set as 
select l.id as linens_num, l.grant_date, l.revoke_date, s.id as stundent_num, s.name, s.lastname
from linens as l, students as s
where l.student_id = s.id;