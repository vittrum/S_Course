create table rooms
(
	id serial primary key,
	places int default 4	
);
create table categories
(
	id serial primary key,
	type char(100) not null,
	description text default 'no additional information'
);
create table violations 
(
	id serial primary key,
	date date not null,
	type char(100) default 'default',
	penalty text default 'not assigned'
);
create table properties
(
	id serial primary key,
	type char(100) default 'property',
	room_id int references rooms(id)
		on update cascade 
		on delete restrict
);
create table students
(
	id serial primary key,
	name char(30) not null,
	lastname char(30) not null,
	father_name char(30),
	course int default 1 check (course<=6),
						 check (course>0),
	specialty char(100) not null,
	invoice text default 'not payed',
	sanitary_pass text default 'not verified',
	category_id int not null references categories(id)
		on update cascade
		on delete restrict
);
create table room_student
(
	id serial primary key,
	settlement_date date not null,
	eviction_date date default null,
	room_id int not null references rooms(id)
		on update cascade
		on delete restrict,
	student_id int not null references students(id)
		on update cascade 
		on delete restrict	
);
create table guest
(
	id serial primary key,
	name char(30) not null,
	lastname char(30) not null,
	father_name char(30), 
	registration_adress	char(70) not null,
	visit_date date not null,
	arrival_time timestamp not null,
	departure_time timestamp default null
);
create table repair_request
(
	id serial primary key,
	type char(100) default 'default',
	theme char(100) default 'theme',
	request_date date not null,
	repair_date date default null,
	room_student_id int not null references room_student(id)
		on update cascade
		on delete cascade
);
create table linens
(
	id serial primary key,
	grant_date date not null,
	revoke_date date default null,
	student_id int not null references students(id)
		on update cascade
		on delete restrict
);